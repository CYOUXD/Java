### 객체 정렬을 위한 객체 간 크기 비교
- TreeSet, TreeMap은 엘리먼트들을 자동적으로 정렬하는 기능이 있습니다. List의 경우는 자동적으로 정렬되지 않지만 sort 메서드를 사용하여 정렬이 가능합니다.
그러나 만일 이런 Collection에 기본 데이터 타입이 아닌 일반적인 객체가 들어갈 경우, 정렬을 위해서 객체간의 크기 비교가 선행되어야 한다.
객체간의 크기 비교를 구현하기 위해서 2가지 인터페이스(Comparable, Comparator)를 활용할 수 있습니다.

> Comparable 인터페이스 구현 (별도의 클래스 생성x 기존 클래스 수정o)
(비교할 클래스에 Comparable 인터페이스를 임플리먼트하고 compareTo()를 오버라이드 해서 사용)
- Collection.sort(list) 사용하며 List를 정렬
- TreeSet() 생성자를 사용했을 때 기본적으로 객체가 정렬되는 방식
- 구현 시 기존의 클래스를 수정해야 하며 compareTo() 구현해야 합니다.
- 기본 정렬 기준을 지정하는 것이라고 볼 수 있습니다.
(TreeSet을 일반 객체와 크기를 비교할 때 Comparable 인터페이스를 구현하고 compareTo 메서드를 사용한다. 
크기가 다름을 Comparable로 캐스팅해서 비교해야하기 때문에 compareTo를 재정의해서 비교해야한다.)
(어제는 기본타입 객체를 비교했기 때문에 이런 과정이 필요하지 않다)

> Comparator 인터페이스 구현(별도의 클래스 생성o 기존 클래스 수정x)
- Collection.sort(list, comparator) 사용하여 List를 정렬
- TreeSet(Comparator객체) 생성자를 사용하여 원하는 방식으로 정렬되게 합니다.
- Comparator를 구현하는 새로운 클래스를 만들어서 compare()메서드를 구현
- 기존 클래스를 수정하지 않고도 기존의 객체를 비교할 수 있습니다.
- 추가 정렬 기준을 지정하는 것이라고 볼 수 있습니다.




