static, final 이랑 같이 정리하기 usage modifier로 같이 묶기

Usage Modifier - abstract

#abstract의 의미
- abstract 제한자는 아직 구현되지 않았다는 의미를 가짐.
- abstract 제한자는 클래스, 메서드에 사용합니다. 변수에는 사용하지 않아요!(변수엔 값이 있어야하니까)

#클래스를 사용하는 경우 = 추상 클래스 
> 객체를 생성할 수 없습니다. (아직 없으니까 못만듦)
> 다형성을 통해서 추상 클래스를 자료형으로 가지는 객체를 생성할 수 있습니다.
		ex) 추상클래스 = 포유류, 추상 클래스를 자료형으로 가지는 객체 = 개, 고양이, 사자...
> 추상 클래스가 됩니다.
> 반드시 상속을 받아서 사용해야 한다. 
		추상클래스를 부모 클래스로 가지는 자식 클래스를 가지고 실제로 구현한다.

#메서드에 사용하는 경우
> 추상 메서드가 됩니다.
> 메서드의 구현 부분이 없음. (메서드 정의만 함 = 접근제한자, 반환타입, 이름, 매개변수만 있음 = 중괄호 안의 코드가 없는 메서드만 가지고 있음)
	구현부분이 없기 때문에 오버라이드 해서 사용한다.
	
*** 추상메서드를 하나라도 포함하는 클래스는 추상 클래스가 되어야 합니다.
*** 그러나, 추상 클래스가 꼭 추상 메서드를 가져야 할 필요는 없습니다.
		추상 클래스는 멤버변수나 일반 메서드를 가질 수도 있다.
		